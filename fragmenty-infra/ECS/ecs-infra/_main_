terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.0"
    }
  }

  backend "s3" {
    bucket         = var.s3_bucket_name
    key            = "terraform-state/terraform.tfstate"
    region         = var.aws_region
    dynamodb_table = var.dynamodb_table_name
  }
}

provider "aws" {
  profile = var.aws_profile
  region  = var.aws_region
}

resource "aws_security_group" "allow_web" {
  name        = "allow_web"
  description = "Allow inbound traffic on port 80"
  vpc_id      = var.vpc_id

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_ecs_cluster" "fragmenty" {
  name = "general-ecs-cluster"
}

resource "aws_ecs_task_definition" "fragmenty" {
  family                = "fragmenty-task"
  container_definitions = file("task-definition.json")
}

resource "aws_ecs_service" "fragmenty" {
  name            = "scala-play-service"
  cluster         = aws_ecs_cluster.fragmenty.id
  task_definition = aws_ecs_task_definition.fragmenty.arn
  desired_count   = 2
  launch_type     = "EC2"

  load_balancer {
    target_group_arn = aws_lb_target_group.fragmenty.arn
    container_name   = "scala-play-app"
    container_port   = 9000
  }
}

resource "aws_lb" "fragmenty" {
  name               = "fragmenty-lb"
  internal           = false
  load_balancer_type = "application"
  security_groups    = [aws_security_group.allow_web.id]
  subnets            = var.subnets
}

resource "aws_lb_target_group" "fragmenty" {
  name     = "fragmenty-tg"
  port     = 80
  protocol = "HTTP"
  vpc_id   = var.vpc_id
}

resource "aws_lb_listener" "fragmenty" {
  load_balancer_arn = aws_lb.fragmenty.arn
  port              = 80
  protocol          = "HTTP"

  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.fragmenty.arn
  }
}

resource "aws_route53_record" "fragmenty" {
  zone_id = var.hosted_zone_id
  name    = var.custom_domain
  type    = "A"

  alias {
    name                   = aws_lb.fragmenty.dns_name
    zone_id                = aws_lb.fragmenty.zone_id
    evaluate_target_health = true
  }
}

resource "aws_cloudwatch_log_group" "fragmenty" {
  name              = "/ecs/scala-play-app"
  retention_in_days = 14
}
